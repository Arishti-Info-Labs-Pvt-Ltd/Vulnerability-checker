import { Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { BehaviorSubject } from 'rxjs';
import { environment } from 'src/environments/environment';


@Injectable({
  providedIn: 'root'

})
export class ApiService {

  constructor(private http: HttpClient) { }


  PROjectName: any
  DependenciesObject: Object = {};
  devDependenciesObject: Object = {};
  // Dependencies?:Object
  // devDependencies?:Object

  demo: any = NetworkInformation
  private dataSource: BehaviorSubject<object> = new BehaviorSubject<object>({});
  dependencies: Observable<object> = this.dataSource.asObservable();

  sendData(dependencies: object, devDependencies: object) {
    this.DependenciesObject = dependencies
    this.devDependenciesObject = devDependencies

  }

  getUserInfo(Username: any) {
    console.log(Username);
    return this.http.get(environment.userInfo_URL + Username);
  }

  getReposInfo(Username: any) {
    return this.http.get(environment.userInfo_URL + Username + '/repos')
  }

  getcontentInfo(Project_Selected: any, Username: any) {
    this.PROjectName = Project_Selected
    return this.http.get(`${environment.userRepo_URL}${Username}/${Project_Selected}/contents`)
  }

  getPackageInfo(Username: any) {
    return this.http.get(environment.packageInfo + Username + '/' + this.PROjectName + '/master/package.json')
  }

  to_api(): Observable<any> {
    let Dependencies = this.DependenciesObject || 'no dependencies found';
    let devDependencies = this.devDependenciesObject || 'no devDepedencies found'
    return this.http.post(environment.API_URL, { Dependencies, devDependencies });
  }

}
