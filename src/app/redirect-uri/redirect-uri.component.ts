import { Component, OnInit } from '@angular/core';
import { ServiceService } from '../service.service';
import { ActivatedRoute } from '@angular/router';
import { config } from '../config';



@Component({
  selector: 'app-redirect-uri',
  templateUrl: './redirect-uri.component.html',
  styleUrls: ['./redirect-uri.component.css']
})
export class RedirectUriComponent implements OnInit {
  code?: any = '';
  Demo!: any;
  li: any;
  lis = [];
  Details?: any = {};
  User_Url!: string;
  User_Name!: string;

  constructor(private route: ActivatedRoute, private Token: ServiceService) {
    //Got the code from Api after successfull authentication
    this.code = this.route.snapshot.queryParamMap.get("code")
    this.GetAccessTokenFunc(this.code)
  }

  ngOnInit(): void { }
  // Here we'll get the Access Token by calling Api
  GetAccessTokenFunc(code: any) {
    this.Token.GetAccessToken(code, config.ClientID, config.ClientSceret).subscribe(Response =>
      this.User()
    );
  }
  // Here we'll get the User Details by calling Api
  User() {
    this.Token.UserToken().subscribe(data => {
      this.li = data;
      // console.log(this.li)
      this.Details = this.li;
      localStorage.setItem("Data_Object", JSON.stringify(this.Details))
      this.Details = localStorage.getItem("Data_Object");
      let value = JSON.parse(this.Details)
      this.User_Name = value.LoginData.login;
      localStorage.setItem("UserName", JSON.stringify(this.User_Name))
      // console.log(this.User_Name);
      location.replace(`http://localhost:4200/Repos`);
    })
  }

}
